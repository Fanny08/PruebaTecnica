{"version":3,"sources":["utils/object.js","components/context/App.js","components/layouts/containers/fluid/Fluid.js","components/commons/search/Search.js","components/commons/header/Header.js","components/commons/character/Character.js","components/commons/spinner/Spinner.js","app/character/CharacterService.js","app/character/CharacterController.js","components/commons/paginator/Paginator.js","components/views/Inicio.js","reportWebVitals.js","index.js"],"names":["isObject","item","Array","isArray","assign","recursive","target","sources","length","source","shift","key","Object","StateInit","filter","page","name","data","numberPages","loading","AppContext","createContext","AppProvider","props","useState","state","setState","Provider","value","propState","newState","children","Fluid","className","Search","setValue","timer","setTimer","useContext","setAppState","type","placeholder","onChange","event","clearTimeout","setTimeout","Header","Character","status","src","image","species","gender","location","Spinner","list","params","a","url","paramsURL","URLSearchParams","toString","axios","request","method","result","CharacterService","Paginator","appState","href","onClick","before","map","element","index","next","Inicio","useEffect","getData","CharacterController","then","results","info","pages","catch","error","console","log","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50c2f098.chunk.js","sourcesContent":["export const isObject = (item) => {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport const assign = {\r\n    recursive: (target, ...sources) => {\r\n        if (!sources.length) return target;\r\n        const source = sources.shift();\r\n        if (isObject(target) && isObject(source)) {\r\n            for (const key in source) {\r\n                if (isObject(source[key])) {\r\n                    if (!target[key]) { \r\n                        Object.assign(target, { [key]: {} });\r\n                    } else {\r\n                        target[key] = Object.assign({}, target[key])\r\n                    }\r\n                    assign.recursive(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(target, { [key]: source[key] });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { createContext, useState, useEffect } from 'react';\r\nimport { assign } from 'utils/object';\r\n\r\nconst StateInit = {\r\n    filter: {\r\n        page: 1,\r\n        name: ''\r\n    },\r\n    data: [],\r\n    numberPages: 1,\r\n    loading: false\r\n};\r\n\r\nconst AppContext = createContext([StateInit, () => {}]);\r\n\r\nexport const AppProvider = (props) => {\r\n    const [state, setState] = useState(StateInit);\r\n\r\n    const updateState = (propState) => {\r\n        setState((state) => {\r\n            const newState = {...state};\r\n            assign.recursive(newState, propState);\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={[state, updateState]}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AppContext;","const Fluid = (props) => {\r\n    return(\r\n        <div className='Fluid container-fluid'>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Fluid;","import { useState, useContext } from 'react';\r\nimport AppContext from 'components/context/App';\r\nimport './Search.scss';\r\n\r\nconst Search = (props) => {\r\n    const [value, setValue] = useState();\r\n    const [timer, setTimer] = useState();\r\n    const [appState, setAppState] = useContext(AppContext);\r\n\r\n    const onWrite = (event) => {\r\n        const value = event.target.value;\r\n        setValue(value);\r\n\r\n        clearTimeout(timer);\r\n        setTimer(setTimeout(() => {\r\n            setAppState({\r\n                filter: {\r\n                    page: 1,\r\n                    name: value\r\n                }\r\n            });\r\n        }, 500));\r\n    }\r\n\r\n    return (\r\n        <div className=\"Search col-12\">\r\n            <input \r\n                type=\"text\" \r\n                value={value}\r\n                placeholder=\"¿Qué personaje quieres buscar?...\"\r\n                onChange={onWrite}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import Search from 'components/commons/search/Search';\r\nimport './Header.scss';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"navbar fixed-top Header\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <Search />\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./Character.scss\";\r\n\r\nconst Character = (props) => {\r\n    return (\r\n        <div className=\"Character col-6 col-md-3\">\r\n            <div className={`content ${props.data.status}`}>\r\n                <div className=\"header\">\r\n                    <img className=\"img-fluid\" src={props.data.image}/>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"name\">\r\n                        <span className=\"data\">{props.data.name}</span>\r\n                    </div>\r\n                    <div className=\"species\">\r\n                        <span className=\"info\">Especie</span>\r\n                        <span className=\"data\">{props.data.species}</span>\r\n                    </div>\r\n                    <div className=\"gender\">\r\n                        <span className=\"info\">Genero</span>\r\n                        <span className=\"data\">{props.data.gender}</span>\r\n                    </div>\r\n                    <div className=\"type\">\r\n                        <span className=\"info\">Tipo</span>\r\n                        <span className=\"data\">{props.data.type}</span>\r\n                    </div>\r\n                    <div className=\"location\">\r\n                        <span className=\"info\">Ubicacion</span>\r\n                        <span className=\"data\">{props.data.location.name}</span>\r\n                    </div>\r\n                    <div className=\"status\">\r\n                        <span className=\"info\">Status</span>\r\n                        <span className=\"data\">{props.data.status}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character;","import './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"Spinner\">\r\n            <i className=\"fas fa-atom fa-spin fa-5x\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import axios from 'axios';\r\n\r\nexport const list = async (params) => {\r\n    let url = 'https://rickandmortyapi.com/api/character/?';\r\n\r\n    const paramsURL = new URLSearchParams(params?.filter).toString();\r\n    url += paramsURL;\r\n\r\n    const result = await axios.request({\r\n        url,\r\n        method: 'GET'\r\n    });\r\n\r\n    return result.data;\r\n}","import * as CharacterService from './CharacterService';\r\n\r\nexport const list = async (params) => {\r\n    const result = await CharacterService.list(params);\r\n    return result;\r\n}","import { useContext } from \"react\";\r\nimport AppContext from 'components/context/App';\r\nimport './Paginator.scss';\r\n\r\nconst Paginator = () => {\r\n    const [appState, setAppState] = useContext(AppContext);\r\n\r\n    const beforePage = () => {\r\n        const before = appState.filter.page - 1;\r\n        if (before  >= 1) {\r\n            setAppState({\r\n                filter: {\r\n                    page: before\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        const next = appState.filter.page + 1;\r\n        if (next  <= appState.numberPages) {\r\n            setAppState({\r\n                filter: {\r\n                    page: next\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"Paginator\" aria-label=\"Page navigation\">\r\n            <ul className=\"pagination pagination-sm align-items-center\">\r\n                <li className=\"page-item\">\r\n                    <a \r\n                        className=\"page-link\" \r\n                        href=\"#\"\r\n                        aria-label=\"Previous\"\r\n                        onClick={beforePage}\r\n                    >\r\n                        <span aria-hidden=\"true\">&laquo;</span>\r\n                        <span className=\"sr-only\">Anterior</span>\r\n                    </a>\r\n                </li>\r\n                \r\n                {[...Array(appState.numberPages)].map((element, index) => {\r\n                    index++;\r\n                    return (\r\n                        <li \r\n                            className= {`page-item ${appState.filter.page === index ? 'active' : 'inactive'}`}\r\n                            key={index}\r\n                        > \r\n                            <a \r\n                                className=\"page-link\" \r\n                                href=\"#\"\r\n                                onClick={() => {\r\n                                    setAppState({\r\n                                        filter: {\r\n                                            page: index\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {index}\r\n                            </a>\r\n                        </li>\r\n                    )\r\n                })}\r\n\r\n                <li className=\"page-item\">\r\n                    <a \r\n                        className=\"page-link\"\r\n                        href=\"#\"\r\n                        aria-label=\"Next\"\r\n                        onClick={nextPage}\r\n                    >\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                        <span className=\"sr-only\">Siguiente</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import { useEffect, useContext } from 'react';\r\nimport Fluid from 'components/layouts/containers/fluid/Fluid';\r\nimport Header from 'components/commons/header/Header';\r\nimport Character from 'components/commons/character/Character';\r\nimport Spinner from 'components/commons/spinner/Spinner';\r\nimport * as CharacterController from 'app/character/CharacterController';\r\nimport Paginator from 'components/commons/paginator/Paginator';\r\nimport AppContext from 'components/context/App';\r\nimport './Inicio.scss';\r\n\r\nconst Inicio = () => {\r\n    const [appState, setAppState] = useContext(AppContext);\r\n    \r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [appState.filter.page, appState.filter.name])\r\n\r\n    const getData = () => {\r\n        setAppState({\r\n            loading: true\r\n        });\r\n\r\n        CharacterController.list({\r\n            filter: appState.filter\r\n        })\r\n        .then((data) => {\r\n            setAppState({\r\n                data: data.results,\r\n                numberPages: data.info.pages\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n        .finally(() => {\r\n            setAppState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fluid>\r\n            <div className=\"row justify-content-md-center\">\r\n                <Header />\r\n                {appState.loading\r\n                    ?\r\n                        <Spinner />\r\n                    :\r\n                    <>\r\n                        <div className=\"Inicio col-12 d-flex justify-content-center\">\r\n                            <Paginator />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-8\">\r\n                            <div className=\"row\">\r\n                                {appState.data.map((element, index) => {\r\n                                    return (\r\n                                        <Character\r\n                                            key={index}\r\n                                            data={element}\r\n                                        />\r\n                                    )\r\n                                })}                        \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-3 col-12 d-flex justify-content-center\">\r\n                            <Paginator />\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </Fluid>\r\n    )\r\n}\r\n\r\nexport default Inicio;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { AppProvider } from 'components/context/App';\nimport Inicio from './components/views/Inicio';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Inicio />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}